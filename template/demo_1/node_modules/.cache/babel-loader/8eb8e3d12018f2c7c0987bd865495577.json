{"remainingRequest":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/babel-loader/lib/index.js!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-radial-progress/src/RadialProgressBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-radial-progress/src/RadialProgressBar.vue","mtime":1489167528000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBkaWFtZXRlcjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogMjAwCiAgICB9LAogICAgdG90YWxTdGVwczogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICBkZWZhdWx0OiAxMAogICAgfSwKICAgIGNvbXBsZXRlZFN0ZXBzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICBzdGFydENvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiAnI2JiZmY0MicKICAgIH0sCiAgICBzdG9wQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6ICcjNDI5MzIxJwogICAgfSwKICAgIHN0cm9rZVdpZHRoOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiAxMAogICAgfSwKICAgIGFuaW1hdGVTcGVlZDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogMTAwMAogICAgfSwKICAgIGlubmVyU3Ryb2tlQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6ICcjMzIzMjMyJwogICAgfSwKICAgIGZwczogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogNjAKICAgIH0sCiAgICB0aW1pbmdGdW5jOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiAnbGluZWFyJwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGdyYWRpZW50OiB7CiAgICAgICAgZng6IDAuOTksCiAgICAgICAgZnk6IDAuNSwKICAgICAgICBjeDogMC41LAogICAgICAgIGN5OiAwLjUsCiAgICAgICAgcjogMC42NQogICAgICB9LAogICAgICBncmFkaWVudEFuaW1hdGlvbjogbnVsbCwKICAgICAgY3VycmVudEFuZ2xlOiAwLAogICAgICBzdHJva2VEYXNob2Zmc2V0OiAwCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJhZGl1czogZnVuY3Rpb24gcmFkaXVzKCkgewogICAgICByZXR1cm4gdGhpcy5kaWFtZXRlciAvIDI7CiAgICB9LAogICAgY2lyY3VtZmVyZW5jZTogZnVuY3Rpb24gY2lyY3VtZmVyZW5jZSgpIHsKICAgICAgcmV0dXJuIE1hdGguUEkgKiB0aGlzLmlubmVyQ2lyY2xlRGlhbWV0ZXI7CiAgICB9LAogICAgc3RlcFNpemU6IGZ1bmN0aW9uIHN0ZXBTaXplKCkgewogICAgICBpZiAodGhpcy50b3RhbFN0ZXBzID09PSAwKSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0KCiAgICAgIHJldHVybiAxMDAgLyB0aGlzLnRvdGFsU3RlcHM7CiAgICB9LAogICAgZmluaXNoZWRQZXJjZW50YWdlOiBmdW5jdGlvbiBmaW5pc2hlZFBlcmNlbnRhZ2UoKSB7CiAgICAgIHJldHVybiB0aGlzLnN0ZXBTaXplICogdGhpcy5jb21wbGV0ZWRTdGVwczsKICAgIH0sCiAgICBjaXJjbGVTbGljZTogZnVuY3Rpb24gY2lyY2xlU2xpY2UoKSB7CiAgICAgIHJldHVybiAyICogTWF0aC5QSSAvIHRoaXMudG90YWxTdGVwczsKICAgIH0sCiAgICBhbmltYXRlU2xpY2U6IGZ1bmN0aW9uIGFuaW1hdGVTbGljZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuY2lyY2xlU2xpY2UgLyB0aGlzLnRvdGFsUG9pbnRzOwogICAgfSwKICAgIGlubmVyQ2lyY2xlRGlhbWV0ZXI6IGZ1bmN0aW9uIGlubmVyQ2lyY2xlRGlhbWV0ZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLmRpYW1ldGVyIC0gdGhpcy5zdHJva2VXaWR0aCAqIDI7CiAgICB9LAogICAgaW5uZXJDaXJjbGVSYWRpdXM6IGZ1bmN0aW9uIGlubmVyQ2lyY2xlUmFkaXVzKCkgewogICAgICByZXR1cm4gdGhpcy5pbm5lckNpcmNsZURpYW1ldGVyIC8gMjsKICAgIH0sCiAgICB0b3RhbFBvaW50czogZnVuY3Rpb24gdG90YWxQb2ludHMoKSB7CiAgICAgIHJldHVybiB0aGlzLmFuaW1hdGVTcGVlZCAvIHRoaXMuYW5pbWF0aW9uSW5jcmVtZW50czsKICAgIH0sCiAgICBhbmltYXRpb25JbmNyZW1lbnRzOiBmdW5jdGlvbiBhbmltYXRpb25JbmNyZW1lbnRzKCkgewogICAgICByZXR1cm4gMTAwMCAvIHRoaXMuZnBzOwogICAgfSwKICAgIGhhc0dyYWRpZW50OiBmdW5jdGlvbiBoYXNHcmFkaWVudCgpIHsKICAgICAgcmV0dXJuIHRoaXMuc3RhcnRDb2xvciAhPT0gdGhpcy5zdG9wQ29sb3I7CiAgICB9LAogICAgY29udGFpbmVyU3R5bGU6IGZ1bmN0aW9uIGNvbnRhaW5lclN0eWxlKCkgewogICAgICByZXR1cm4gewogICAgICAgIGhlaWdodDogIiIuY29uY2F0KHRoaXMuZGlhbWV0ZXIsICJweCIpLAogICAgICAgIHdpZHRoOiAiIi5jb25jYXQodGhpcy5kaWFtZXRlciwgInB4IikKICAgICAgfTsKICAgIH0sCiAgICBwcm9ncmVzc1N0eWxlOiBmdW5jdGlvbiBwcm9ncmVzc1N0eWxlKCkgewogICAgICByZXR1cm4gewogICAgICAgIGhlaWdodDogIiIuY29uY2F0KHRoaXMuZGlhbWV0ZXIsICJweCIpLAogICAgICAgIHdpZHRoOiAiIi5jb25jYXQodGhpcy5kaWFtZXRlciwgInB4IiksCiAgICAgICAgc3Ryb2tlV2lkdGg6ICIiLmNvbmNhdCh0aGlzLnN0cm9rZVdpZHRoLCAicHgiKSwKICAgICAgICBzdHJva2VEYXNob2Zmc2V0OiB0aGlzLnN0cm9rZURhc2hvZmZzZXQsCiAgICAgICAgdHJhbnNpdGlvbjogInN0cm9rZS1kYXNob2Zmc2V0ICIuY29uY2F0KHRoaXMuYW5pbWF0ZVNwZWVkLCAibXMgIikuY29uY2F0KHRoaXMudGltaW5nRnVuYykKICAgICAgfTsKICAgIH0sCiAgICBzdHJva2VTdHlsZTogZnVuY3Rpb24gc3Ryb2tlU3R5bGUoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgaGVpZ2h0OiAiIi5jb25jYXQodGhpcy5kaWFtZXRlciwgInB4IiksCiAgICAgICAgd2lkdGg6ICIiLmNvbmNhdCh0aGlzLmRpYW1ldGVyLCAicHgiKSwKICAgICAgICBzdHJva2VXaWR0aDogIiIuY29uY2F0KHRoaXMuc3Ryb2tlV2lkdGgsICJweCIpCiAgICAgIH07CiAgICB9LAogICAgaW5uZXJDaXJjbGVTdHlsZTogZnVuY3Rpb24gaW5uZXJDaXJjbGVTdHlsZSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB3aWR0aDogIiIuY29uY2F0KHRoaXMuaW5uZXJDaXJjbGVEaWFtZXRlciwgInB4IikKICAgICAgfTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFN0b3BQb2ludHNPZkNpcmNsZTogZnVuY3Rpb24gZ2V0U3RvcFBvaW50c09mQ2lyY2xlKHN0ZXBzKSB7CiAgICAgIHZhciBwb2ludHMgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RlcHM7IGkrKykgewogICAgICAgIHZhciBhbmdsZSA9IHRoaXMuY2lyY2xlU2xpY2UgKiBpOwogICAgICAgIHBvaW50cy5wdXNoKHRoaXMuZ2V0UG9pbnRPZkNpcmNsZShhbmdsZSkpOwogICAgICB9CgogICAgICByZXR1cm4gcG9pbnRzOwogICAgfSwKICAgIGdldFBvaW50T2ZDaXJjbGU6IGZ1bmN0aW9uIGdldFBvaW50T2ZDaXJjbGUoYW5nbGUpIHsKICAgICAgdmFyIHJhZGl1cyA9IDAuNTsKICAgICAgdmFyIHggPSByYWRpdXMgKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSk7CiAgICAgIHZhciB5ID0gcmFkaXVzICsgcmFkaXVzICogTWF0aC5zaW4oYW5nbGUpOwogICAgICByZXR1cm4gewogICAgICAgIHg6IHgsCiAgICAgICAgeTogeQogICAgICB9OwogICAgfSwKICAgIGdvdG9Qb2ludDogZnVuY3Rpb24gZ290b1BvaW50KCkgewogICAgICB2YXIgcG9pbnQgPSB0aGlzLmdldFBvaW50T2ZDaXJjbGUodGhpcy5jdXJyZW50QW5nbGUpOwogICAgICB0aGlzLmdyYWRpZW50LmZ4ID0gcG9pbnQueDsKICAgICAgdGhpcy5ncmFkaWVudC5meSA9IHBvaW50Lnk7CiAgICB9LAogICAgY2hhbmdlUHJvZ3Jlc3M6IGZ1bmN0aW9uIGNoYW5nZVByb2dyZXNzKF9yZWYpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBfcmVmJGlzQW5pbWF0ZSA9IF9yZWYuaXNBbmltYXRlLAogICAgICAgICAgaXNBbmltYXRlID0gX3JlZiRpc0FuaW1hdGUgPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJGlzQW5pbWF0ZTsKICAgICAgdGhpcy5zdHJva2VEYXNob2Zmc2V0ID0gKDEwMCAtIHRoaXMuZmluaXNoZWRQZXJjZW50YWdlKSAvIDEwMCAqIHRoaXMuY2lyY3VtZmVyZW5jZTsKCiAgICAgIGlmICh0aGlzLmdyYWRpZW50QW5pbWF0aW9uKSB7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmdyYWRpZW50QW5pbWF0aW9uKTsKICAgICAgfQoKICAgICAgaWYgKCFpc0FuaW1hdGUpIHsKICAgICAgICB0aGlzLmdvdG9OZXh0U3RlcCgpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIGFuZ2xlT2Zmc2V0ID0gKHRoaXMuY29tcGxldGVkU3RlcHMgLSAxKSAqIHRoaXMuY2lyY2xlU2xpY2U7CiAgICAgIHZhciBpID0gKHRoaXMuY3VycmVudEFuZ2xlIC0gYW5nbGVPZmZzZXQpIC8gdGhpcy5hbmltYXRlU2xpY2U7CiAgICAgIHZhciBpbmNyZW1lbnRlciA9IE1hdGguYWJzKGkgLSB0aGlzLnRvdGFsUG9pbnRzKSAvIHRoaXMudG90YWxQb2ludHM7CiAgICAgIHZhciBpc01vdmVGb3J3YXJkID0gaSA8IHRoaXMudG90YWxQb2ludHM7CiAgICAgIHRoaXMuZ3JhZGllbnRBbmltYXRpb24gPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKGlzTW92ZUZvcndhcmQgJiYgaSA+PSBfdGhpcy50b3RhbFBvaW50cyB8fCAhaXNNb3ZlRm9yd2FyZCAmJiBpIDwgX3RoaXMudG90YWxQb2ludHMpIHsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwoX3RoaXMuZ3JhZGllbnRBbmltYXRpb24pOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMuY3VycmVudEFuZ2xlID0gYW5nbGVPZmZzZXQgKyBfdGhpcy5hbmltYXRlU2xpY2UgKiBpOwoKICAgICAgICBfdGhpcy5nb3RvUG9pbnQoKTsKCiAgICAgICAgaSArPSBpc01vdmVGb3J3YXJkID8gaW5jcmVtZW50ZXIgOiAtaW5jcmVtZW50ZXI7CiAgICAgIH0sIHRoaXMuYW5pbWF0aW9uSW5jcmVtZW50cyk7CiAgICB9LAogICAgZ290b05leHRTdGVwOiBmdW5jdGlvbiBnb3RvTmV4dFN0ZXAoKSB7CiAgICAgIHRoaXMuY3VycmVudEFuZ2xlID0gdGhpcy5jb21wbGV0ZWRTdGVwcyAqIHRoaXMuY2lyY2xlU2xpY2U7CiAgICAgIHRoaXMuZ290b1BvaW50KCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgdG90YWxTdGVwczogZnVuY3Rpb24gdG90YWxTdGVwcygpIHsKICAgICAgdGhpcy5jaGFuZ2VQcm9ncmVzcyh7CiAgICAgICAgaXNBbmltYXRlOiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIGNvbXBsZXRlZFN0ZXBzOiBmdW5jdGlvbiBjb21wbGV0ZWRTdGVwcygpIHsKICAgICAgdGhpcy5jaGFuZ2VQcm9ncmVzcyh7CiAgICAgICAgaXNBbmltYXRlOiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIGRpYW1ldGVyOiBmdW5jdGlvbiBkaWFtZXRlcigpIHsKICAgICAgdGhpcy5jaGFuZ2VQcm9ncmVzcyh7CiAgICAgICAgaXNBbmltYXRlOiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIHN0cm9rZVdpZHRoOiBmdW5jdGlvbiBzdHJva2VXaWR0aCgpIHsKICAgICAgdGhpcy5jaGFuZ2VQcm9ncmVzcyh7CiAgICAgICAgaXNBbmltYXRlOiB0cnVlCiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuY2hhbmdlUHJvZ3Jlc3MoewogICAgICBpc0FuaW1hdGU6IGZhbHNlCiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["RadialProgressBar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"radial-progress-container\" :style=\"containerStyle\">\r\n    <div class=\"radial-progress-inner\" :style=\"innerCircleStyle\">\r\n      <slot></slot>\r\n    </div>\r\n    <svg class=\"radial-progress-bar\"\r\n         :width=\"diameter\"\r\n         :height=\"diameter\"\r\n         version=\"1.1\"\r\n         xmlns=\"http://www.w3.org/2000/svg\">\r\n      <defs>\r\n        <radialGradient :id=\"'radial-gradient' + _uid\"\r\n                        :fx=\"gradient.fx\"\r\n                        :fy=\"gradient.fy\"\r\n                        :cx=\"gradient.cx\"\r\n                        :cy=\"gradient.cy\"\r\n                        :r=\"gradient.r\">\r\n          <stop offset=\"30%\" :stop-color=\"startColor\"/>\r\n          <stop offset=\"100%\" :stop-color=\"stopColor\"/>\r\n        </radialGradient>\r\n      </defs>\r\n      <circle :r=\"innerCircleRadius\"\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              fill=\"transparent\"\r\n              :stroke=\"innerStrokeColor\"\r\n              :stroke-dasharray=\"circumference\"\r\n              stroke-dashoffset=\"0\"\r\n              stroke-linecap=\"round\"\r\n              :style=\"strokeStyle\"></circle>\r\n      <circle :transform=\"'rotate(270, ' + radius + ',' + radius + ')'\"\r\n              :r=\"innerCircleRadius\"\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              fill=\"transparent\"\r\n              :stroke=\"'url(#radial-gradient' + _uid + ')'\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"circumference\"\r\n              stroke-linecap=\"round\"\r\n              :style=\"progressStyle\"></circle>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    diameter: {\r\n      type: Number,\r\n      required: false,\r\n      default: 200\r\n    },\r\n    totalSteps: {\r\n      type: Number,\r\n      required: true,\r\n      default: 10\r\n    },\r\n    completedSteps: {\r\n      type: Number,\r\n      required: true,\r\n      default: 0\r\n    },\r\n    startColor: {\r\n      type: String,\r\n      required: false,\r\n      default: '#bbff42'\r\n    },\r\n    stopColor: {\r\n      type: String,\r\n      required: false,\r\n      default: '#429321'\r\n    },\r\n    strokeWidth: {\r\n      type: Number,\r\n      required: false,\r\n      default: 10\r\n    },\r\n    animateSpeed: {\r\n      type: Number,\r\n      required: false,\r\n      default: 1000\r\n    },\r\n    innerStrokeColor: {\r\n      type: String,\r\n      required: false,\r\n      default: '#323232'\r\n    },\r\n    fps: {\r\n      type: Number,\r\n      required: false,\r\n      default: 60\r\n    },\r\n    timingFunc: {\r\n      type: String,\r\n      required: false,\r\n      default: 'linear'\r\n    }\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      gradient: {\r\n        fx: 0.99,\r\n        fy: 0.5,\r\n        cx: 0.5,\r\n        cy: 0.5,\r\n        r: 0.65\r\n      },\r\n      gradientAnimation: null,\r\n      currentAngle: 0,\r\n      strokeDashoffset: 0\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    radius () {\r\n      return this.diameter / 2\r\n    },\r\n\r\n    circumference () {\r\n      return Math.PI * this.innerCircleDiameter\r\n    },\r\n\r\n    stepSize () {\r\n      if (this.totalSteps === 0) {\r\n        return 0\r\n      }\r\n\r\n      return 100 / this.totalSteps\r\n    },\r\n\r\n    finishedPercentage () {\r\n      return this.stepSize * this.completedSteps\r\n    },\r\n\r\n    circleSlice () {\r\n      return 2 * Math.PI / this.totalSteps\r\n    },\r\n\r\n    animateSlice () {\r\n      return this.circleSlice / this.totalPoints\r\n    },\r\n\r\n    innerCircleDiameter () {\r\n      return this.diameter - (this.strokeWidth * 2)\r\n    },\r\n\r\n    innerCircleRadius () {\r\n      return this.innerCircleDiameter / 2\r\n    },\r\n\r\n    totalPoints () {\r\n      return this.animateSpeed / this.animationIncrements\r\n    },\r\n\r\n    animationIncrements () {\r\n      return 1000 / this.fps\r\n    },\r\n\r\n    hasGradient () {\r\n      return this.startColor !== this.stopColor\r\n    },\r\n\r\n    containerStyle () {\r\n      return {\r\n        height: `${this.diameter}px`,\r\n        width: `${this.diameter}px`\r\n      }\r\n    },\r\n\r\n    progressStyle () {\r\n      return {\r\n        height: `${this.diameter}px`,\r\n        width: `${this.diameter}px`,\r\n        strokeWidth: `${this.strokeWidth}px`,\r\n        strokeDashoffset: this.strokeDashoffset,\r\n        transition: `stroke-dashoffset ${this.animateSpeed}ms ${this.timingFunc}`\r\n      }\r\n    },\r\n\r\n    strokeStyle () {\r\n      return {\r\n        height: `${this.diameter}px`,\r\n        width: `${this.diameter}px`,\r\n        strokeWidth: `${this.strokeWidth}px`\r\n      }\r\n    },\r\n\r\n    innerCircleStyle () {\r\n      return {\r\n        width: `${this.innerCircleDiameter}px`\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getStopPointsOfCircle (steps) {\r\n      const points = []\r\n\r\n      for (let i = 0; i < steps; i++) {\r\n        const angle = this.circleSlice * i\r\n        points.push(this.getPointOfCircle(angle))\r\n      }\r\n\r\n      return points\r\n    },\r\n\r\n    getPointOfCircle (angle) {\r\n      const radius = 0.5\r\n\r\n      const x = radius + (radius * Math.cos(angle))\r\n      const y = radius + (radius * Math.sin(angle))\r\n\r\n      return { x, y }\r\n    },\r\n\r\n    gotoPoint () {\r\n      const point = this.getPointOfCircle(this.currentAngle)\r\n\r\n      this.gradient.fx = point.x\r\n      this.gradient.fy = point.y\r\n    },\r\n\r\n    changeProgress ({ isAnimate = true }) {\r\n      this.strokeDashoffset = ((100 - this.finishedPercentage) / 100) * this.circumference\r\n\r\n      if (this.gradientAnimation) {\r\n        clearInterval(this.gradientAnimation)\r\n      }\r\n\r\n      if (!isAnimate) {\r\n        this.gotoNextStep()\r\n        return\r\n      }\r\n\r\n      const angleOffset = (this.completedSteps - 1) * this.circleSlice\r\n      let i = (this.currentAngle - angleOffset) / this.animateSlice\r\n      const incrementer = Math.abs(i - this.totalPoints) / this.totalPoints\r\n      const isMoveForward = i < this.totalPoints\r\n\r\n      this.gradientAnimation = setInterval(() => {\r\n        if (isMoveForward && i >= this.totalPoints ||\r\n            !isMoveForward && i < this.totalPoints) {\r\n          clearInterval(this.gradientAnimation)\r\n          return\r\n        }\r\n\r\n        this.currentAngle = angleOffset + (this.animateSlice * i)\r\n        this.gotoPoint()\r\n\r\n        i += isMoveForward ? incrementer : -incrementer\r\n      }, this.animationIncrements)\r\n    },\r\n\r\n    gotoNextStep () {\r\n      this.currentAngle = this.completedSteps * this.circleSlice\r\n      this.gotoPoint()\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    totalSteps () {\r\n      this.changeProgress({ isAnimate: true })\r\n    },\r\n\r\n    completedSteps () {\r\n      this.changeProgress({ isAnimate: true })\r\n    },\r\n\r\n    diameter () {\r\n      this.changeProgress({ isAnimate: true })\r\n    },\r\n\r\n    strokeWidth () {\r\n      this.changeProgress({ isAnimate: true })\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.changeProgress({ isAnimate: false })\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.radial-progress-container {\r\n  position: relative;\r\n}\r\n\r\n.radial-progress-inner {\r\n  position: absolute;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-radial-progress/src"}]}