{"remainingRequest":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/src/pages/basic-ui/buttons.vue?vue&type=template&id=e69fd7ee&","dependencies":[{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/src/pages/basic-ui/buttons.vue","mtime":1606801635728},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}