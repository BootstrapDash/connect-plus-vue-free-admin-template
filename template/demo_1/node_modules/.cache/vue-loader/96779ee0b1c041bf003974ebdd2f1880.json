{"remainingRequest":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/src/pages/samples/general-pages/faq-1.vue?vue&type=template&id=843b6020&","dependencies":[{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/src/pages/samples/general-pages/faq-1.vue","mtime":1606801635759},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}