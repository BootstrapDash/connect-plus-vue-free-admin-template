{"remainingRequest":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/src/layout/partials/Header.vue?vue&type=template&id=6713abfe&scoped=true&","dependencies":[{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/src/layout/partials/Header.vue","mtime":1606801635719},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxiLW5hdmJhciBpZD0idGVtcGxhdGUtaGVhZGVyIiBjbGFzcz0ibmF2YmFyIGRlZmF1bHQtbGF5b3V0LW5hdmJhciBjb2wtbGctMTIgY29sLTEyIHAtMCBmaXhlZC10b3AgZC1mbGV4IGZsZXgtcm93IiB0b2dnbGVhYmxlPSJsZyI+CiAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgbmF2YmFyLWJyYW5kLXdyYXBwZXIgZC1mbGV4IGFsaWduLWl0ZW1zLXRvcCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4KICAgIDxyb3V0ZXItbGluayBjbGFzcz0ibmF2YmFyLWJyYW5kIGJyYW5kLWxvZ28iIHRvPSIvIj4KICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL2ltYWdlcy9sb2dvLnN2ZyIgYWx0PSJsb2dvIiAvPgogICAgPC9yb3V0ZXItbGluaz4KICAgIDxyb3V0ZXItbGluayBjbGFzcz0ibmF2YmFyLWJyYW5kIGJyYW5kLWxvZ28tbWluaSIgdG89Ii8iPgogICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL2xvZ28tbWluaS5zdmciIGFsdD0ibG9nbyIgLz4KICAgIDwvcm91dGVyLWxpbms+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ibmF2YmFyLW1lbnUtd3JhcHBlciBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIG1sLWF1dG8gbWwtbGctMCI+CiAgICA8YnV0dG9uIGNsYXNzPSJuYXZiYXItdG9nZ2xlciBuYXZiYXItdG9nZ2xlciBhbGlnbi1zZWxmLWNlbnRlciBkLWxnLWJsb2NrIiB0eXBlPSJidXR0b24iIEBjbGljaz0idG9nZ2xlU2lkZWJhcigpIj4KICAgICAgPHNwYW4gY2xhc3M9Im1kaSBtZGktbWVudSI+PC9zcGFuPgogICAgPC9idXR0b24+IAogICAgPGRpdiBjbGFzcz0ic2VhcmNoLWZpZWxkIGQtbm9uZSBkLXhsLWJsb2NrIj4KICAgICAgPGZvcm0gYWN0aW9uPSIjIj4KICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGlucHV0LWdyb3VwIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwLXByZXBlbmQgYmctdHJhbnNwYXJlbnQiPgogICAgICAgICAgICA8aSBjbGFzcz0iaW5wdXQtZ3JvdXAtdGV4dCBib3JkZXItMCBtZGkgbWRpLW1hZ25pZnkiPjwvaT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wgYmctdHJhbnNwYXJlbnQgYm9yZGVyLTAiIHBsYWNlaG9sZGVyPSJTZWFyY2ggcHJvZHVjdHMiPgogICAgICAgIDwvZGl2PgogICAgICA8L2Zvcm0+CiAgICA8L2Rpdj4KICAgIDxiLW5hdmJhci1uYXYgY2xhc3M9Im5hdmJhci1uYXYtcmlnaHQgbWwtYXV0byI+CiAgICAgIDxiLW5hdi1pdGVtLWRyb3Bkb3duIGNsYXNzPSJkcm9wZG93biBkLW5vbmUgZC1tZC1ibG9jayI+CiAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImJ1dHRvbi1jb250ZW50Ij4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuYXYtbGluayBkcm9wZG93bi10b2dnbGUiIGlkPSJyZXBvcnREcm9wZG93biIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgIFJlcG9ydHMKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1leWUtb3V0bGluZSBtci0yIj48L2k+VmlldyBQcm9qZWN0IAogICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1wZW5jaWwtb3V0bGluZSBtci0yIj48L2k+RWRpdCBQcm9qZWN0CiAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgIDwvYi1uYXYtaXRlbS1kcm9wZG93bj4KICAgICAgPGItbmF2LWl0ZW0tZHJvcGRvd24gY2xhc3M9ImRyb3Bkb3duIGQtbm9uZSBkLW1kLWJsb2NrIj4KICAgICAgICA8dGVtcGxhdGUgc2xvdD0iYnV0dG9uLWNvbnRlbnQiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdi1saW5rIGRyb3Bkb3duLXRvZ2dsZSIgaWQ9InJlcG9ydERyb3Bkb3duIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgUHJvamVjdHMKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1maWxlLXBkZiBtci0yIj48L2k+UERGIAogICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1maWxlLWV4Y2VsIG1yLTIiPjwvaT5FeGNlbCAKICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICA8Yi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktZmlsZS13b3JkIG1yLTIiPjwvaT5kb2MKICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgPC9iLW5hdi1pdGVtLWRyb3Bkb3duPgogICAgICA8Yi1uYXYtaXRlbS1kcm9wZG93biBjbGFzcz0iZHJvcGRvd24gZC1ub25lIGQtbWQtYmxvY2sgbmF2LWxhbmd1YWdlIj4KICAgICAgICA8dGVtcGxhdGUgc2xvdD0iYnV0dG9uLWNvbnRlbnQiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdi1saW5rIGRyb3Bkb3duLXRvZ2dsZSIgaWQ9InJlcG9ydERyb3Bkb3duIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWxhbmd1YWdlLWljb24iPgogICAgICAgICAgICAgIDxpIGNsYXNzPSJmbGFnLWljb24gZmxhZy1pY29uLXVzIiB0aXRsZT0idXMiIGlkPSJ1cyI+PC9pPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWxhbmd1YWdlLXRleHQiPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0xIHRleHQtYmxhY2siPkVuZ2xpc2g8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPGItZHJvcGRvd24taXRlbT4KICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1sYW5ndWFnZS1pY29uIG1yLTIiPgogICAgICAgICAgICA8aSBjbGFzcz0iZmxhZy1pY29uIGZsYWctaWNvbi1hZSIgdGl0bGU9ImFlIiBpZD0iYWUiPjwvaT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWxhbmd1YWdlLXRleHQiPgogICAgICAgICAgICA8cCBjbGFzcz0ibWItMSB0ZXh0LWJsYWNrIj5BcmFiaWM8L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICA8Yi1kcm9wZG93bi1pdGVtPgogICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWxhbmd1YWdlLWljb24gbXItMiI+CiAgICAgICAgICAgIDxpIGNsYXNzPSJmbGFnLWljb24gZmxhZy1pY29uLWdiIiB0aXRsZT0iR0IiIGlkPSJnYiI+PC9pPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtbGFuZ3VhZ2UtdGV4dCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0xIHRleHQtYmxhY2siPkVuZ2xpc2g8L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgPC9iLW5hdi1pdGVtLWRyb3Bkb3duPgogICAgICA8Yi1uYXYtaXRlbS1kcm9wZG93biByaWdodCBjbGFzcz0ibmF2LXByb2ZpbGUgbmF2YmFyLWRyb3Bkb3duIj4KICAgICAgICA8dGVtcGxhdGUgc2xvdD0iYnV0dG9uLWNvbnRlbnQiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5hdi1saW5rIGRyb3Bkb3duLXRvZ2dsZSIgaWQ9InByb2ZpbGVEcm9wZG93biIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1wcm9maWxlLWltZyI+CiAgICAgICAgICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL2ltYWdlcy9mYWNlcy9mYWNlMjgucG5nIiBhbHQ9ImltYWdlIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYXZhaWxhYmlsaXR5LXN0YXR1cyBvbmxpbmUiPjwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdi1wcm9maWxlLXRleHQiPgogICAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0xIHRleHQtYmxhY2siPkhlbnJ5IEtsZWluPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gY2xhc3M9InByZXZpZXctaXRlbSBwLTAiPgogICAgICAgICAgPGRpdiBjbGFzcz0icC0zIHRleHQtY2VudGVyIGJnLXByaW1hcnkiPgogICAgICAgICAgICA8aW1nIGNsYXNzPSJpbWctYXZhdGFyIGltZy1hdmF0YXI0OCBpbWctYXZhdGFyLXRodW1iIiBzcmM9IkAvYXNzZXRzL2ltYWdlcy9mYWNlcy9mYWNlMjgucG5nIiBhbHQ9IiI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InAtMiI+CiAgICAgICAgICA8aDUgY2xhc3M9ImRyb3Bkb3duLWhlYWRlciB0ZXh0LXVwcGVyY2FzZSBwbC0yIHRleHQtZGFyayI+VXNlciBPcHRpb25zPC9oNT4KICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pdGVtIHB5LTEgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiIgaHJlZj0iIyI+CiAgICAgICAgICAgIDxzcGFuPkluYm94PC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0icC0wIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2UtcHJpbWFyeSI+Mzwvc3Bhbj4KICAgICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1lbWFpbC1vcGVuLW91dGxpbmUgbWwtMSI+PC9pPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSBweS0xIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4iIGhyZWY9IiMiPgogICAgICAgICAgICA8c3Bhbj5Qcm9maWxlPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0icC0wIj4KICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UgYmFkZ2Utc3VjY2VzcyI+MTwvc3Bhbj4KICAgICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1hY2NvdW50LW91dGxpbmUgbWwtMSI+PC9pPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSBweS0xIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4iIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSI+CiAgICAgICAgICAgIDxzcGFuPlNldHRpbmdzPC9zcGFuPgogICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1zZXR0aW5ncyI+PC9pPgogICAgICAgICAgPC9hPgogICAgICAgICAgPGRpdiByb2xlPSJzZXBhcmF0b3IiIGNsYXNzPSJkcm9wZG93bi1kaXZpZGVyIj48L2Rpdj4KICAgICAgICAgIDxoNSBjbGFzcz0iZHJvcGRvd24taGVhZGVyIHRleHQtdXBwZXJjYXNlICBwbC0yIHRleHQtZGFyayBtdC0yIj5BY3Rpb25zPC9oNT4KICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pdGVtIHB5LTEgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiIgaHJlZj0iIyI+CiAgICAgICAgICAgIDxzcGFuPkxvY2sgQWNjb3VudDwvc3Bhbj4KICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktbG9jayBtbC0xIj48L2k+CiAgICAgICAgICA8L2E+CiAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSBweS0xIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4iIGhyZWY9IiMiPgogICAgICAgICAgICA8c3Bhbj5Mb2cgT3V0PC9zcGFuPgogICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1sb2dvdXQgbWwtMSI+PC9pPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICA8L2ItbmF2LWl0ZW0tZHJvcGRvd24+CiAgICAgIAogICAgICA8Yi1uYXYtaXRlbS1kcm9wZG93biByaWdodCBjbGFzcz0icHJldmlldy1saXN0IGRvdHRlZC1idG4tdHJhbnNwYXJlbnQiPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJidXR0b24tY29udGVudCI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXYtbGluayBjb3VudC1pbmRpY2F0b3IiPgogICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1lbWFpbC1vdXRsaW5lIj48L2k+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3VudC1zeW1ib2wgYmctc3VjY2VzcyI+PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICA8aDYgY2xhc3M9InAtMyBtYi0wIj5NZXNzYWdlczwvaDY+CiAgICAgICAgPGItZHJvcGRvd24taXRlbSBjbGFzcz0icHJldmlldy1pdGVtIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXctdGh1bWJuYWlsIj4KICAgICAgICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL2ltYWdlcy9mYWNlcy9mYWNlMS5qcGciIGFsdD0iaW1hZ2UiIGNsYXNzPSJwcm9maWxlLXBpYyI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXctaXRlbS1jb250ZW50IGQtZmxleCBhbGlnbi1pdGVtcy1zdGFydCBmbGV4LWNvbHVtbiBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4KICAgICAgICAgICAgPGg2IGNsYXNzPSJwcmV2aWV3LXN1YmplY3QgZWxsaXBzaXMgbWItMSBmb250LXdlaWdodC1ub3JtYWwiPkNyZWdoIHNlbmQgeW91IGEgbWVzc2FnZTwvaDY+CiAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWdyYXkgbWItMCI+MTUgTWludXRlcyBhZ288L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICA8Yi1kcm9wZG93bi1pdGVtIGNsYXNzPSJwcmV2aWV3LWl0ZW0iPgogICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy10aHVtYm5haWwiPgogICAgICAgICAgICA8aW1nIHNyYz0iQC9hc3NldHMvaW1hZ2VzL2ZhY2VzL2ZhY2UyLmpwZyIgYWx0PSJpbWFnZSIgY2xhc3M9InByb2ZpbGUtcGljIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy1pdGVtLWNvbnRlbnQgZC1mbGV4IGFsaWduLWl0ZW1zLXN0YXJ0IGZsZXgtY29sdW1uIGp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgICAgICA8aDYgY2xhc3M9InByZXZpZXctc3ViamVjdCBlbGxpcHNpcyBtYi0xIGZvbnQtd2VpZ2h0LW5vcm1hbCI+UHJvZmlsZSBwaWN0dXJlIHVwZGF0ZWQ8L2g2PgogICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5IG1iLTAiPjE4IE1pbnV0ZXMgYWdvPC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgPGItZHJvcGRvd24taXRlbSBjbGFzcz0icHJldmlldy1pdGVtIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXctdGh1bWJuYWlsIj4KICAgICAgICAgICAgPGltZyBzcmM9IkAvYXNzZXRzL2ltYWdlcy9mYWNlcy9mYWNlMy5qcGciIGFsdD0iaW1hZ2UiIGNsYXNzPSJwcm9maWxlLXBpYyI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXctaXRlbS1jb250ZW50IGQtZmxleCBhbGlnbi1pdGVtcy1zdGFydCBmbGV4LWNvbHVtbiBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIj4KICAgICAgICAgICAgPGg2IGNsYXNzPSJwcmV2aWV3LXN1YmplY3QgZWxsaXBzaXMgbWItMSBmb250LXdlaWdodC1ub3JtYWwiPk1hcmsgc2VuZCB5b3UgYSBtZXNzYWdlPC9oNj4KICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtZ3JheSBtYi0wIj4xIE1pbnV0ZXMgYWdvPC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgPGg2IGNsYXNzPSJwLTMgbWItMCB0ZXh0LWNlbnRlciBib3JkZXItdG9wIj40IG5ldyBtZXNzYWdlczwvaDY+CiAgICAgIDwvYi1uYXYtaXRlbS1kcm9wZG93bj4KICAgICAgPGItbmF2LWl0ZW0tZHJvcGRvd24gcmlnaHQgY2xhc3M9InByZXZpZXctbGlzdCBkb3R0ZWQtYnRuLXRyYW5zcGFyZW50Ij4KICAgICAgICA8dGVtcGxhdGUgc2xvdD0iYnV0dG9uLWNvbnRlbnQiPgogICAgICAgICAgPGRpdiBjbGFzcz0ibmF2LWxpbmsgY291bnQtaW5kaWNhdG9yIj4KICAgICAgICAgICAgPGkgY2xhc3M9Im1kaSBtZGktYmVsbC1vdXRsaW5lIj48L2k+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3VudC1zeW1ib2wgYmctZGFuZ2VyIj48L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDxoNiBjbGFzcz0icC0zIG1iLTAiPk5vdGlmaWNhdGlvbnM8L2g2PgogICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gY2xhc3M9InByZXZpZXctaXRlbSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJwcmV2aWV3LXRodW1ibmFpbCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXctaWNvbiBiZy1zdWNjZXNzIj4KICAgICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1jYWxlbmRhciI+PC9pPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy1pdGVtLWNvbnRlbnQgZC1mbGV4IGFsaWduLWl0ZW1zLXN0YXJ0IGZsZXgtY29sdW1uIGp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgICAgICA8aDYgY2xhc3M9InByZXZpZXctc3ViamVjdCBmb250LXdlaWdodC1ub3JtYWwgbWItMSI+RXZlbnQgdG9kYXk8L2g2PgogICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5IGVsbGlwc2lzIG1iLTAiPgogICAgICAgICAgICAgIEp1c3QgYSByZW1pbmRlciB0aGF0IHlvdSBoYXZlIGFuIGV2ZW50IHRvZGF5CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvYi1kcm9wZG93bi1pdGVtPgogICAgICAgIDxiLWRyb3Bkb3duLWl0ZW0gY2xhc3M9InByZXZpZXctaXRlbSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJwcmV2aWV3LXRodW1ibmFpbCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXctaWNvbiBiZy13YXJuaW5nIj4KICAgICAgICAgICAgICA8aSBjbGFzcz0ibWRpIG1kaS1zZXR0aW5ncyI+PC9pPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy1pdGVtLWNvbnRlbnQgZC1mbGV4IGFsaWduLWl0ZW1zLXN0YXJ0IGZsZXgtY29sdW1uIGp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgICAgICA8aDYgY2xhc3M9InByZXZpZXctc3ViamVjdCBmb250LXdlaWdodC1ub3JtYWwgbWItMSI+U2V0dGluZ3M8L2g2PgogICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ncmF5IGVsbGlwc2lzIG1iLTAiPgogICAgICAgICAgICAgIFVwZGF0ZSBkYXNoYm9hcmQKICAgICAgICAgICAgPC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9iLWRyb3Bkb3duLWl0ZW0+CiAgICAgICAgPGItZHJvcGRvd24taXRlbSBjbGFzcz0icHJldmlldy1pdGVtIj4KICAgICAgICAgIDxkaXYgY2xhc3M9InByZXZpZXctdGh1bWJuYWlsIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy1pY29uIGJnLWluZm8iPgogICAgICAgICAgICAgIDxpIGNsYXNzPSJtZGkgbWRpLWxpbmstdmFyaWFudCI+PC9pPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy1pdGVtLWNvbnRlbnQgZC1mbGV4IGFsaWduLWl0ZW1zLXN0YXJ0IGZsZXgtY29sdW1uIGp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgICAgICA8aDYgY2xhc3M9InByZXZpZXctc3ViamVjdCBmb250LXdlaWdodC1ub3JtYWwgbWItMSI+TGF1bmNoIEFkbWluPC9oNj4KICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtZ3JheSBlbGxpcHNpcyBtYi0wIj4KICAgICAgICAgICAgICBOZXcgYWRtaW4gd293IQogICAgICAgICAgICA8L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItZHJvcGRvd24taXRlbT4KICAgICAgICA8aDYgY2xhc3M9InAtMyBtYi0wIHRleHQtY2VudGVyIGJvcmRlci10b3AiPjQgbmV3IG1lc3NhZ2VzPC9oNj4KICAgICAgPC9iLW5hdi1pdGVtLWRyb3Bkb3duPgogICAgPC9iLW5hdmJhci1uYXY+CiAgICA8YnV0dG9uIGNsYXNzPSJuYXZiYXItdG9nZ2xlciBuYXZiYXItdG9nZ2xlci1yaWdodCBhbGlnbi1zZWxmLWNlbnRlciIgdHlwZT0iYnV0dG9uIiBAY2xpY2s9InRvZ2dsZU1vYmlsZVNpZGViYXIoKSI+CiAgICAgIDxzcGFuIGNsYXNzPSJtZGkgbWRpLW1lbnUiPjwvc3Bhbj4KICAgIDwvYnV0dG9uPgogIDwvZGl2Pgo8L2ItbmF2YmFyPgo="},null]}