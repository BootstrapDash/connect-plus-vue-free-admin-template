{"remainingRequest":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-radial-progress/src/RadialProgressBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-radial-progress/src/RadialProgressBar.vue","mtime":1489167528000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jyothish/Documents/connect-plus-free-vue/template/demo_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIHByb3BzOiB7DQogICAgZGlhbWV0ZXI6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6IDIwMA0KICAgIH0sDQogICAgdG90YWxTdGVwczogew0KICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgcmVxdWlyZWQ6IHRydWUsDQogICAgICBkZWZhdWx0OiAxMA0KICAgIH0sDQogICAgY29tcGxldGVkU3RlcHM6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiB0cnVlLA0KICAgICAgZGVmYXVsdDogMA0KICAgIH0sDQogICAgc3RhcnRDb2xvcjogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogJyNiYmZmNDInDQogICAgfSwNCiAgICBzdG9wQ29sb3I6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6ICcjNDI5MzIxJw0KICAgIH0sDQogICAgc3Ryb2tlV2lkdGg6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6IDEwDQogICAgfSwNCiAgICBhbmltYXRlU3BlZWQ6IHsNCiAgICAgIHR5cGU6IE51bWJlciwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6IDEwMDANCiAgICB9LA0KICAgIGlubmVyU3Ryb2tlQ29sb3I6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6ICcjMzIzMjMyJw0KICAgIH0sDQogICAgZnBzOiB7DQogICAgICB0eXBlOiBOdW1iZXIsDQogICAgICByZXF1aXJlZDogZmFsc2UsDQogICAgICBkZWZhdWx0OiA2MA0KICAgIH0sDQogICAgdGltaW5nRnVuYzogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogJ2xpbmVhcicNCiAgICB9DQogIH0sDQoNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGdyYWRpZW50OiB7DQogICAgICAgIGZ4OiAwLjk5LA0KICAgICAgICBmeTogMC41LA0KICAgICAgICBjeDogMC41LA0KICAgICAgICBjeTogMC41LA0KICAgICAgICByOiAwLjY1DQogICAgICB9LA0KICAgICAgZ3JhZGllbnRBbmltYXRpb246IG51bGwsDQogICAgICBjdXJyZW50QW5nbGU6IDAsDQogICAgICBzdHJva2VEYXNob2Zmc2V0OiAwDQogICAgfQ0KICB9LA0KDQogIGNvbXB1dGVkOiB7DQogICAgcmFkaXVzICgpIHsNCiAgICAgIHJldHVybiB0aGlzLmRpYW1ldGVyIC8gMg0KICAgIH0sDQoNCiAgICBjaXJjdW1mZXJlbmNlICgpIHsNCiAgICAgIHJldHVybiBNYXRoLlBJICogdGhpcy5pbm5lckNpcmNsZURpYW1ldGVyDQogICAgfSwNCg0KICAgIHN0ZXBTaXplICgpIHsNCiAgICAgIGlmICh0aGlzLnRvdGFsU3RlcHMgPT09IDApIHsNCiAgICAgICAgcmV0dXJuIDANCiAgICAgIH0NCg0KICAgICAgcmV0dXJuIDEwMCAvIHRoaXMudG90YWxTdGVwcw0KICAgIH0sDQoNCiAgICBmaW5pc2hlZFBlcmNlbnRhZ2UgKCkgew0KICAgICAgcmV0dXJuIHRoaXMuc3RlcFNpemUgKiB0aGlzLmNvbXBsZXRlZFN0ZXBzDQogICAgfSwNCg0KICAgIGNpcmNsZVNsaWNlICgpIHsNCiAgICAgIHJldHVybiAyICogTWF0aC5QSSAvIHRoaXMudG90YWxTdGVwcw0KICAgIH0sDQoNCiAgICBhbmltYXRlU2xpY2UgKCkgew0KICAgICAgcmV0dXJuIHRoaXMuY2lyY2xlU2xpY2UgLyB0aGlzLnRvdGFsUG9pbnRzDQogICAgfSwNCg0KICAgIGlubmVyQ2lyY2xlRGlhbWV0ZXIgKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZGlhbWV0ZXIgLSAodGhpcy5zdHJva2VXaWR0aCAqIDIpDQogICAgfSwNCg0KICAgIGlubmVyQ2lyY2xlUmFkaXVzICgpIHsNCiAgICAgIHJldHVybiB0aGlzLmlubmVyQ2lyY2xlRGlhbWV0ZXIgLyAyDQogICAgfSwNCg0KICAgIHRvdGFsUG9pbnRzICgpIHsNCiAgICAgIHJldHVybiB0aGlzLmFuaW1hdGVTcGVlZCAvIHRoaXMuYW5pbWF0aW9uSW5jcmVtZW50cw0KICAgIH0sDQoNCiAgICBhbmltYXRpb25JbmNyZW1lbnRzICgpIHsNCiAgICAgIHJldHVybiAxMDAwIC8gdGhpcy5mcHMNCiAgICB9LA0KDQogICAgaGFzR3JhZGllbnQgKCkgew0KICAgICAgcmV0dXJuIHRoaXMuc3RhcnRDb2xvciAhPT0gdGhpcy5zdG9wQ29sb3INCiAgICB9LA0KDQogICAgY29udGFpbmVyU3R5bGUgKCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgaGVpZ2h0OiBgJHt0aGlzLmRpYW1ldGVyfXB4YCwNCiAgICAgICAgd2lkdGg6IGAke3RoaXMuZGlhbWV0ZXJ9cHhgDQogICAgICB9DQogICAgfSwNCg0KICAgIHByb2dyZXNzU3R5bGUgKCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgaGVpZ2h0OiBgJHt0aGlzLmRpYW1ldGVyfXB4YCwNCiAgICAgICAgd2lkdGg6IGAke3RoaXMuZGlhbWV0ZXJ9cHhgLA0KICAgICAgICBzdHJva2VXaWR0aDogYCR7dGhpcy5zdHJva2VXaWR0aH1weGAsDQogICAgICAgIHN0cm9rZURhc2hvZmZzZXQ6IHRoaXMuc3Ryb2tlRGFzaG9mZnNldCwNCiAgICAgICAgdHJhbnNpdGlvbjogYHN0cm9rZS1kYXNob2Zmc2V0ICR7dGhpcy5hbmltYXRlU3BlZWR9bXMgJHt0aGlzLnRpbWluZ0Z1bmN9YA0KICAgICAgfQ0KICAgIH0sDQoNCiAgICBzdHJva2VTdHlsZSAoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBoZWlnaHQ6IGAke3RoaXMuZGlhbWV0ZXJ9cHhgLA0KICAgICAgICB3aWR0aDogYCR7dGhpcy5kaWFtZXRlcn1weGAsDQogICAgICAgIHN0cm9rZVdpZHRoOiBgJHt0aGlzLnN0cm9rZVdpZHRofXB4YA0KICAgICAgfQ0KICAgIH0sDQoNCiAgICBpbm5lckNpcmNsZVN0eWxlICgpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIHdpZHRoOiBgJHt0aGlzLmlubmVyQ2lyY2xlRGlhbWV0ZXJ9cHhgDQogICAgICB9DQogICAgfQ0KICB9LA0KDQogIG1ldGhvZHM6IHsNCiAgICBnZXRTdG9wUG9pbnRzT2ZDaXJjbGUgKHN0ZXBzKSB7DQogICAgICBjb25zdCBwb2ludHMgPSBbXQ0KDQogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ZXBzOyBpKyspIHsNCiAgICAgICAgY29uc3QgYW5nbGUgPSB0aGlzLmNpcmNsZVNsaWNlICogaQ0KICAgICAgICBwb2ludHMucHVzaCh0aGlzLmdldFBvaW50T2ZDaXJjbGUoYW5nbGUpKQ0KICAgICAgfQ0KDQogICAgICByZXR1cm4gcG9pbnRzDQogICAgfSwNCg0KICAgIGdldFBvaW50T2ZDaXJjbGUgKGFuZ2xlKSB7DQogICAgICBjb25zdCByYWRpdXMgPSAwLjUNCg0KICAgICAgY29uc3QgeCA9IHJhZGl1cyArIChyYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSkpDQogICAgICBjb25zdCB5ID0gcmFkaXVzICsgKHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlKSkNCg0KICAgICAgcmV0dXJuIHsgeCwgeSB9DQogICAgfSwNCg0KICAgIGdvdG9Qb2ludCAoKSB7DQogICAgICBjb25zdCBwb2ludCA9IHRoaXMuZ2V0UG9pbnRPZkNpcmNsZSh0aGlzLmN1cnJlbnRBbmdsZSkNCg0KICAgICAgdGhpcy5ncmFkaWVudC5meCA9IHBvaW50LngNCiAgICAgIHRoaXMuZ3JhZGllbnQuZnkgPSBwb2ludC55DQogICAgfSwNCg0KICAgIGNoYW5nZVByb2dyZXNzICh7IGlzQW5pbWF0ZSA9IHRydWUgfSkgew0KICAgICAgdGhpcy5zdHJva2VEYXNob2Zmc2V0ID0gKCgxMDAgLSB0aGlzLmZpbmlzaGVkUGVyY2VudGFnZSkgLyAxMDApICogdGhpcy5jaXJjdW1mZXJlbmNlDQoNCiAgICAgIGlmICh0aGlzLmdyYWRpZW50QW5pbWF0aW9uKSB7DQogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5ncmFkaWVudEFuaW1hdGlvbikNCiAgICAgIH0NCg0KICAgICAgaWYgKCFpc0FuaW1hdGUpIHsNCiAgICAgICAgdGhpcy5nb3RvTmV4dFN0ZXAoKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCg0KICAgICAgY29uc3QgYW5nbGVPZmZzZXQgPSAodGhpcy5jb21wbGV0ZWRTdGVwcyAtIDEpICogdGhpcy5jaXJjbGVTbGljZQ0KICAgICAgbGV0IGkgPSAodGhpcy5jdXJyZW50QW5nbGUgLSBhbmdsZU9mZnNldCkgLyB0aGlzLmFuaW1hdGVTbGljZQ0KICAgICAgY29uc3QgaW5jcmVtZW50ZXIgPSBNYXRoLmFicyhpIC0gdGhpcy50b3RhbFBvaW50cykgLyB0aGlzLnRvdGFsUG9pbnRzDQogICAgICBjb25zdCBpc01vdmVGb3J3YXJkID0gaSA8IHRoaXMudG90YWxQb2ludHMNCg0KICAgICAgdGhpcy5ncmFkaWVudEFuaW1hdGlvbiA9IHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgaWYgKGlzTW92ZUZvcndhcmQgJiYgaSA+PSB0aGlzLnRvdGFsUG9pbnRzIHx8DQogICAgICAgICAgICAhaXNNb3ZlRm9yd2FyZCAmJiBpIDwgdGhpcy50b3RhbFBvaW50cykgew0KICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5ncmFkaWVudEFuaW1hdGlvbikNCiAgICAgICAgICByZXR1cm4NCiAgICAgICAgfQ0KDQogICAgICAgIHRoaXMuY3VycmVudEFuZ2xlID0gYW5nbGVPZmZzZXQgKyAodGhpcy5hbmltYXRlU2xpY2UgKiBpKQ0KICAgICAgICB0aGlzLmdvdG9Qb2ludCgpDQoNCiAgICAgICAgaSArPSBpc01vdmVGb3J3YXJkID8gaW5jcmVtZW50ZXIgOiAtaW5jcmVtZW50ZXINCiAgICAgIH0sIHRoaXMuYW5pbWF0aW9uSW5jcmVtZW50cykNCiAgICB9LA0KDQogICAgZ290b05leHRTdGVwICgpIHsNCiAgICAgIHRoaXMuY3VycmVudEFuZ2xlID0gdGhpcy5jb21wbGV0ZWRTdGVwcyAqIHRoaXMuY2lyY2xlU2xpY2UNCiAgICAgIHRoaXMuZ290b1BvaW50KCkNCiAgICB9DQogIH0sDQoNCiAgd2F0Y2g6IHsNCiAgICB0b3RhbFN0ZXBzICgpIHsNCiAgICAgIHRoaXMuY2hhbmdlUHJvZ3Jlc3MoeyBpc0FuaW1hdGU6IHRydWUgfSkNCiAgICB9LA0KDQogICAgY29tcGxldGVkU3RlcHMgKCkgew0KICAgICAgdGhpcy5jaGFuZ2VQcm9ncmVzcyh7IGlzQW5pbWF0ZTogdHJ1ZSB9KQ0KICAgIH0sDQoNCiAgICBkaWFtZXRlciAoKSB7DQogICAgICB0aGlzLmNoYW5nZVByb2dyZXNzKHsgaXNBbmltYXRlOiB0cnVlIH0pDQogICAgfSwNCg0KICAgIHN0cm9rZVdpZHRoICgpIHsNCiAgICAgIHRoaXMuY2hhbmdlUHJvZ3Jlc3MoeyBpc0FuaW1hdGU6IHRydWUgfSkNCiAgICB9DQogIH0sDQoNCiAgY3JlYXRlZCAoKSB7DQogICAgdGhpcy5jaGFuZ2VQcm9ncmVzcyh7IGlzQW5pbWF0ZTogZmFsc2UgfSkNCiAgfQ0KfQ0K"},{"version":3,"sources":["RadialProgressBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"RadialProgressBar.vue","sourceRoot":"node_modules/vue-radial-progress/src","sourcesContent":["<template>\r\n  <div class=\"radial-progress-container\" :style=\"containerStyle\">\r\n    <div class=\"radial-progress-inner\" :style=\"innerCircleStyle\">\r\n      <slot></slot>\r\n    </div>\r\n    <svg class=\"radial-progress-bar\"\r\n         :width=\"diameter\"\r\n         :height=\"diameter\"\r\n         version=\"1.1\"\r\n         xmlns=\"http://www.w3.org/2000/svg\">\r\n      <defs>\r\n        <radialGradient :id=\"'radial-gradient' + _uid\"\r\n                        :fx=\"gradient.fx\"\r\n                        :fy=\"gradient.fy\"\r\n                        :cx=\"gradient.cx\"\r\n                        :cy=\"gradient.cy\"\r\n                        :r=\"gradient.r\">\r\n          <stop offset=\"30%\" :stop-color=\"startColor\"/>\r\n          <stop offset=\"100%\" :stop-color=\"stopColor\"/>\r\n        </radialGradient>\r\n      </defs>\r\n      <circle :r=\"innerCircleRadius\"\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              fill=\"transparent\"\r\n              :stroke=\"innerStrokeColor\"\r\n              :stroke-dasharray=\"circumference\"\r\n              stroke-dashoffset=\"0\"\r\n              stroke-linecap=\"round\"\r\n              :style=\"strokeStyle\"></circle>\r\n      <circle :transform=\"'rotate(270, ' + radius + ',' + radius + ')'\"\r\n              :r=\"innerCircleRadius\"\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              fill=\"transparent\"\r\n              :stroke=\"'url(#radial-gradient' + _uid + ')'\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"circumference\"\r\n              stroke-linecap=\"round\"\r\n              :style=\"progressStyle\"></circle>\r\n    </svg>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    diameter: {\r\n      type: Number,\r\n      required: false,\r\n      default: 200\r\n    },\r\n    totalSteps: {\r\n      type: Number,\r\n      required: true,\r\n      default: 10\r\n    },\r\n    completedSteps: {\r\n      type: Number,\r\n      required: true,\r\n      default: 0\r\n    },\r\n    startColor: {\r\n      type: String,\r\n      required: false,\r\n      default: '#bbff42'\r\n    },\r\n    stopColor: {\r\n      type: String,\r\n      required: false,\r\n      default: '#429321'\r\n    },\r\n    strokeWidth: {\r\n      type: Number,\r\n      required: false,\r\n      default: 10\r\n    },\r\n    animateSpeed: {\r\n      type: Number,\r\n      required: false,\r\n      default: 1000\r\n    },\r\n    innerStrokeColor: {\r\n      type: String,\r\n      required: false,\r\n      default: '#323232'\r\n    },\r\n    fps: {\r\n      type: Number,\r\n      required: false,\r\n      default: 60\r\n    },\r\n    timingFunc: {\r\n      type: String,\r\n      required: false,\r\n      default: 'linear'\r\n    }\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      gradient: {\r\n        fx: 0.99,\r\n        fy: 0.5,\r\n        cx: 0.5,\r\n        cy: 0.5,\r\n        r: 0.65\r\n      },\r\n      gradientAnimation: null,\r\n      currentAngle: 0,\r\n      strokeDashoffset: 0\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    radius () {\r\n      return this.diameter / 2\r\n    },\r\n\r\n    circumference () {\r\n      return Math.PI * this.innerCircleDiameter\r\n    },\r\n\r\n    stepSize () {\r\n      if (this.totalSteps === 0) {\r\n        return 0\r\n      }\r\n\r\n      return 100 / this.totalSteps\r\n    },\r\n\r\n    finishedPercentage () {\r\n      return this.stepSize * this.completedSteps\r\n    },\r\n\r\n    circleSlice () {\r\n      return 2 * Math.PI / this.totalSteps\r\n    },\r\n\r\n    animateSlice () {\r\n      return this.circleSlice / this.totalPoints\r\n    },\r\n\r\n    innerCircleDiameter () {\r\n      return this.diameter - (this.strokeWidth * 2)\r\n    },\r\n\r\n    innerCircleRadius () {\r\n      return this.innerCircleDiameter / 2\r\n    },\r\n\r\n    totalPoints () {\r\n      return this.animateSpeed / this.animationIncrements\r\n    },\r\n\r\n    animationIncrements () {\r\n      return 1000 / this.fps\r\n    },\r\n\r\n    hasGradient () {\r\n      return this.startColor !== this.stopColor\r\n    },\r\n\r\n    containerStyle () {\r\n      return {\r\n        height: `${this.diameter}px`,\r\n        width: `${this.diameter}px`\r\n      }\r\n    },\r\n\r\n    progressStyle () {\r\n      return {\r\n        height: `${this.diameter}px`,\r\n        width: `${this.diameter}px`,\r\n        strokeWidth: `${this.strokeWidth}px`,\r\n        strokeDashoffset: this.strokeDashoffset,\r\n        transition: `stroke-dashoffset ${this.animateSpeed}ms ${this.timingFunc}`\r\n      }\r\n    },\r\n\r\n    strokeStyle () {\r\n      return {\r\n        height: `${this.diameter}px`,\r\n        width: `${this.diameter}px`,\r\n        strokeWidth: `${this.strokeWidth}px`\r\n      }\r\n    },\r\n\r\n    innerCircleStyle () {\r\n      return {\r\n        width: `${this.innerCircleDiameter}px`\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getStopPointsOfCircle (steps) {\r\n      const points = []\r\n\r\n      for (let i = 0; i < steps; i++) {\r\n        const angle = this.circleSlice * i\r\n        points.push(this.getPointOfCircle(angle))\r\n      }\r\n\r\n      return points\r\n    },\r\n\r\n    getPointOfCircle (angle) {\r\n      const radius = 0.5\r\n\r\n      const x = radius + (radius * Math.cos(angle))\r\n      const y = radius + (radius * Math.sin(angle))\r\n\r\n      return { x, y }\r\n    },\r\n\r\n    gotoPoint () {\r\n      const point = this.getPointOfCircle(this.currentAngle)\r\n\r\n      this.gradient.fx = point.x\r\n      this.gradient.fy = point.y\r\n    },\r\n\r\n    changeProgress ({ isAnimate = true }) {\r\n      this.strokeDashoffset = ((100 - this.finishedPercentage) / 100) * this.circumference\r\n\r\n      if (this.gradientAnimation) {\r\n        clearInterval(this.gradientAnimation)\r\n      }\r\n\r\n      if (!isAnimate) {\r\n        this.gotoNextStep()\r\n        return\r\n      }\r\n\r\n      const angleOffset = (this.completedSteps - 1) * this.circleSlice\r\n      let i = (this.currentAngle - angleOffset) / this.animateSlice\r\n      const incrementer = Math.abs(i - this.totalPoints) / this.totalPoints\r\n      const isMoveForward = i < this.totalPoints\r\n\r\n      this.gradientAnimation = setInterval(() => {\r\n        if (isMoveForward && i >= this.totalPoints ||\r\n            !isMoveForward && i < this.totalPoints) {\r\n          clearInterval(this.gradientAnimation)\r\n          return\r\n        }\r\n\r\n        this.currentAngle = angleOffset + (this.animateSlice * i)\r\n        this.gotoPoint()\r\n\r\n        i += isMoveForward ? incrementer : -incrementer\r\n      }, this.animationIncrements)\r\n    },\r\n\r\n    gotoNextStep () {\r\n      this.currentAngle = this.completedSteps * this.circleSlice\r\n      this.gotoPoint()\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    totalSteps () {\r\n      this.changeProgress({ isAnimate: true })\r\n    },\r\n\r\n    completedSteps () {\r\n      this.changeProgress({ isAnimate: true })\r\n    },\r\n\r\n    diameter () {\r\n      this.changeProgress({ isAnimate: true })\r\n    },\r\n\r\n    strokeWidth () {\r\n      this.changeProgress({ isAnimate: true })\r\n    }\r\n  },\r\n\r\n  created () {\r\n    this.changeProgress({ isAnimate: false })\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.radial-progress-container {\r\n  position: relative;\r\n}\r\n\r\n.radial-progress-inner {\r\n  position: absolute;\r\n  top: 0; right: 0; bottom: 0; left: 0;\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"]}]}