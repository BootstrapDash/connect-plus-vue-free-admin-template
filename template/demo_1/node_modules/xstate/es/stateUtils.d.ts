import { EventObject, StateNode, StateValue } from '.';
declare type Configuration<TC, TE extends EventObject> = Iterable<StateNode<TC, any, TE>>;
declare type AdjList<TC, TE extends EventObject> = Map<StateNode<TC, any, TE>, Array<StateNode<TC, any, TE>>>;
export declare function getConfiguration<TC, TE extends EventObject>(prevStateNodes: Iterable<StateNode<TC, any, TE>>, stateNodes: Iterable<StateNode<TC, any, TE>>): Iterable<StateNode<TC, any, TE>>;
export declare function getAdjList<TC, TE extends EventObject>(configuration: Configuration<TC, TE>): AdjList<TC, TE>;
export declare function getValue<TC, TE extends EventObject>(rootNode: StateNode<TC, any, TE>, configuration: Configuration<TC, TE>): StateValue;
export {};
